// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package generated

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type Size struct {
	_tab flatbuffers.Struct
}

func (rcv *Size) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Size) Table() flatbuffers.Table {
	return rcv._tab.Table
}

func (rcv *Size) Width() int32 {
	return rcv._tab.GetInt32(rcv._tab.Pos + flatbuffers.UOffsetT(0))
}
func (rcv *Size) MutateWidth(n int32) bool {
	return rcv._tab.MutateInt32(rcv._tab.Pos+flatbuffers.UOffsetT(0), n)
}

func (rcv *Size) Height() int32 {
	return rcv._tab.GetInt32(rcv._tab.Pos + flatbuffers.UOffsetT(4))
}
func (rcv *Size) MutateHeight(n int32) bool {
	return rcv._tab.MutateInt32(rcv._tab.Pos+flatbuffers.UOffsetT(4), n)
}

func CreateSize(builder *flatbuffers.Builder, width int32, height int32) flatbuffers.UOffsetT {
	builder.Prep(4, 8)
	builder.PrependInt32(height)
	builder.PrependInt32(width)
	return builder.Offset()
}
